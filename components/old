{/* <View style={styles.cardView}>
        <Image
          style={styles.image}
          source={require("../../assets/images/worth.png")}
        />
        <View style={styles.worthView}>
          <View style={{display: "flex", flexDirection: "row", justifyContent: "space-between", alignItems: "center"}}>
            <Text style={styles.headerText}>Net Worth</Text>
            <TouchableOpacity style={styles.editButton} onPress={() => setIsModalVisible(true)}>
              <FontAwesome name="edit" size={16} color="#fff" />
            </TouchableOpacity>
          </View>
          <Text style={styles.valueText}>{totalWorth}</Text>
        </View>
      </View> */}

      {/* Modal for Editing Total Worth */}
      {/* <Modal
        visible={isModalVisible}
        animationType="slide"
        transparent={true}
        onRequestClose={() => setIsModalVisible(false)}
      >
        <View style={styles.modalBackground}>
          <View style={styles.modalContainer}>
            <TextInput
              style={styles.input}
              placeholder="Enter new total worth"
              value={newWorth}
              onChangeText={setNewWorth}
            />
            <View style={styles.modalButtons}>
              <Button title="Cancel" onPress={() => setIsModalVisible(false)} color={"red"} />
              <Button title="Update Worth" onPress={updateTotalWorth} color={"#20446f"}/>

              <TouchableOpacity onPress={() => setIsModalVisible(false)} style={{backgroundColor: "red", paddingVertical:5, paddingHorizontal: 10 ,  borderRadius: 8}}>
                <Text style={{color: "#fff", fontFamily: "cairo-regular",textAlign: "center"}}>
                Cancel
                </Text>
              </TouchableOpacity>

              <TouchableOpacity onPress={updateTotalWorth} style={{backgroundColor: "#20446f", paddingVertical:5, paddingHorizontal: 10 ,  borderRadius: 8}}>
                <Text style={{color: "#fff", fontFamily: "cairo-regular",textAlign: "center"}}>
                Update Worth
                </Text>
              </TouchableOpacity>

            </View>
          </View>
        </View>
      </Modal>

      <View style={styles.cardView}>
        <Image
          style={styles.image}
          source={require("../../assets/images/followers.png")}
        />
        <View style={styles.worthView}>
          <Text style={styles.headerText}>Subscribers</Text>
          <Text style={styles.valueText}>{subscribers}</Text>
        </View>
      </View> */}



       // onPress={() => {
              //   setSelectedSocialMedia((prev: any) => [
              //     ...prev.filter((s: any) => s.value !== currentSocialMedia.value),
              //     { ...currentSocialMedia, username },
              //   ]);
              //   setModalVisible(false);
              //   setUsername('');
              // }}


// // Import the functions you need from the SDKs you need
// import { initializeApp } from "firebase/app";
// import { getAnalytics } from "firebase/analytics";
// // TODO: Add SDKs for Firebase products that you want to use
// // https://firebase.google.com/docs/web/setup#available-libraries

// // Your web app's Firebase configuration
// // For Firebase JS SDK v7.20.0 and later, measurementId is optional
// const firebaseConfig = {
//   apiKey: "AIzaSyB20KRSb2wDbJOQ5S-s29A6fAFk2Bm5b40",
//   authDomain: "worthefy.firebaseapp.com",
//   databaseURL: "https://worthefy-default-rtdb.firebaseio.com",
//   projectId: "worthefy",
//   storageBucket: "worthefy.firebasestorage.app",
//   messagingSenderId: "453329433128",
//   appId: "1:453329433128:web:6a9691786d56a5b0cebb1d",
//   measurementId: "G-XNS23SRTNS"
// };

// // Initialize Firebase
// const app = initializeApp(firebaseConfig);
// const analytics = getAnalytics(app);